[{"/home/mark/repo/tailwind-deez/client/src/index.js":"1","/home/mark/repo/tailwind-deez/client/src/App.js":"2","/home/mark/repo/tailwind-deez/client/src/getWeb3.js":"3","/home/mark/repo/tailwind-deez/client/src/ExchangeForm.js":"4","/home/mark/repo/tailwind-deez/client/src/TransferForm.js":"5","/home/mark/repo/tailwind-deez/client/src/NavBar.js":"6","/home/mark/repo/tailwind-deez/client/src/WalletConnector.js":"7"},{"size":168,"mtime":1635191205359,"results":"8","hashOfConfig":"9"},{"size":3785,"mtime":1635305811553,"results":"10","hashOfConfig":"9"},{"size":1146,"mtime":1635191205359,"results":"11","hashOfConfig":"9"},{"size":2008,"mtime":1635374987356,"results":"12","hashOfConfig":"9"},{"size":1443,"mtime":1635366350019,"results":"13","hashOfConfig":"9"},{"size":965,"mtime":1635366735839,"results":"14","hashOfConfig":"9"},{"size":1022,"mtime":1635374846256,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1holjc0",{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/mark/repo/tailwind-deez/client/src/index.js",[],["32","33"],"/home/mark/repo/tailwind-deez/client/src/App.js",["34"],"import React, {Component} from \"react\"\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\"\nimport Deez from \"./contracts/Deez.json\"\nimport DeezExchanger from \"./contracts/DeezExchanger.json\"\nimport getWeb3 from \"./getWeb3\"\nimport NavBar from \"./NavBar\"\nimport TransferForm from \"./TransferForm\"\nimport ExchangeForm from \"./ExchangeForm\"\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = { balance: 0, web3: null, account: null, deezContract: null, exchangerContract: null }\n  }\n\n  componentDidMount = async () => {\n    const web3 = await getWeb3()\n\n    // Load deez\n    const netId = await web3.eth.net.getId()\n    const deployedNetwork = Deez.networks[netId]\n    const deezContract = new web3.eth.Contract(\n      Deez.abi,\n      deployedNetwork && deployedNetwork.address\n    )\n\n    // Load exchanger\n    const exchangerNetwork = DeezExchanger.networks[netId]\n    const exchangerContract = new web3.eth.Contract(\n      DeezExchanger.abi,\n      exchangerNetwork && exchangerNetwork.address\n    )\n\n    this.setState({ web3, deezContract, exchangerContract })\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n    if (prevState.account != this.state.account) await this.refreshBalance()\n  }\n\n  connectWallet = (account) => {\n    this.setState({ account: account })\n  }\n\n  refreshBalance = async () => {\n    try {\n      const { account, deezContract } = this.state\n      const balance = await deezContract.methods.balanceOf(account).call()\n\n      this.setState({balance: balance})\n    } catch (e) {\n      console.error(e)\n    }\n  }\n\n  transferDeez = async (address, amount) => {\n    const { account, deezContract } = this.state\n    if (amount <= 0) return\n    if (!account) return\n    if (!this.state.web3.utils.isAddress(address)) return\n    await deezContract.methods.transfer(address, amount).send({ from: account })\n\n    await this.refreshBalance()\n  }\n\n  buyDeez = async (amount) => {\n    const { account, exchangerContract } = this.state\n    if (amount <= 0) return\n    if (!account) return\n    await exchangerContract.methods.buyDeez().send({ value: amount, from: account })\n\n    await this.refreshBalance()\n  }\n\n  sellDeez = async (amount) => {\n    const { account, deezContract, exchangerContract } = this.state\n    if (amount <= 0) return\n    if (!account) return\n    if (this.state.balance < amount) { alert(\"Insufficient balance\"); return }\n    await deezContract.methods.approve(exchangerContract._address, amount).send({ from: account })\n    await exchangerContract.methods.sellDeez(amount).send({ from: account })\n\n    await this.refreshBalance()\n  }\n\n  render() {\n    /*\n    if (!this.state.web3) {\n      return <div>Loading Web3, accounts, and contracts...</div>;\n    }*/\n    return (\n      <Router>\n        <NavBar state={this.state} handleConnect={this.connectWallet} />\n        <div className=\"flex justify-center items-center text-center rounded-md\">\n          <div className=\"mt-20 w-1/3 shadow-lg\">\n            <div className=\"m-5 text-xl\">Balance: {this.state.balance}</div>\n          </div>\n        </div>\n\n        <div className=\"flex justify-center items-center text-center rounded-md\">\n          <div className=\"mt-2 w-1/3 shadow-lg\">\n            <Switch>\n              <Route exact path=\"/\">\n                <TransferForm \n                  state={this.state} \n                  handleTransfer={this.transferDeez}\n                  />\n              </Route>\n              <Route path=\"/exchange\">\n                <ExchangeForm\n                state={this.state}\n                handleBuy={this.buyDeez}\n                handleSell={this.sellDeez}\n                />\n              </Route>\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    )\n  }\n}\n\nexport default App\n","/home/mark/repo/tailwind-deez/client/src/getWeb3.js",[],"/home/mark/repo/tailwind-deez/client/src/ExchangeForm.js",[],"/home/mark/repo/tailwind-deez/client/src/TransferForm.js",[],"/home/mark/repo/tailwind-deez/client/src/NavBar.js",[],"/home/mark/repo/tailwind-deez/client/src/WalletConnector.js",["35"],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":42,"column":27,"nodeType":"42","messageId":"43","endLine":42,"endColumn":29},{"ruleId":"44","severity":1,"message":"45","line":10,"column":6,"nodeType":"46","endLine":10,"endColumn":21,"suggestions":"47"},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'handleConnect' and 'wallet.account'. Either include them or remove the dependency array. If 'handleConnect' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["50"],"no-global-assign","no-unsafe-negation",{"desc":"51","fix":"52"},"Update the dependencies array to be: [handleConnect, wallet.account, wallet.status]",{"range":"53","text":"54"},[288,303],"[handleConnect, wallet.account, wallet.status]"]