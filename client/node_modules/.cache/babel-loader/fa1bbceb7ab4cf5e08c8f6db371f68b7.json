{"ast":null,"code":"\"use strict\"; // Copyright (c) 2018-2020 WalletLink.org <https://www.walletlink.org/>\n// Copyright (c) 2018-2020 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WalletLinkRelay = void 0;\n\nconst bind_decorator_1 = __importDefault(require(\"bind-decorator\"));\n\nconst rxjs_1 = require(\"rxjs\");\n\nconst operators_1 = require(\"rxjs/operators\");\n\nconst WalletLinkConnection_1 = require(\"../connection/WalletLinkConnection\");\n\nconst util_1 = require(\"../util\");\n\nconst aes256gcm = __importStar(require(\"./aes256gcm\"));\n\nconst Session_1 = require(\"./Session\");\n\nconst Web3Method_1 = require(\"./Web3Method\");\n\nconst Web3RequestCanceledMessage_1 = require(\"./Web3RequestCanceledMessage\");\n\nconst Web3RequestMessage_1 = require(\"./Web3RequestMessage\");\n\nconst Web3Response_1 = require(\"./Web3Response\");\n\nconst Web3ResponseMessage_1 = require(\"./Web3ResponseMessage\");\n\nconst WalletLinkRelayAbstract_1 = require(\"./WalletLinkRelayAbstract\");\n\nclass WalletLinkRelay {\n  constructor(options) {\n    this.accountsCallback = null;\n    this.chainIdCallback = null;\n    this.jsonRpcUrlCallback = null;\n    this.appName = \"\";\n    this.appLogoUrl = null;\n    this.walletLinkUrl = options.walletLinkUrl;\n    this.storage = options.storage;\n    this.session = Session_1.Session.load(options.storage) || new Session_1.Session(options.storage).save();\n    this.relayEventManager = options.relayEventManager;\n    this.connection = new WalletLinkConnection_1.WalletLinkConnection(this.session.id, this.session.key, this.walletLinkUrl);\n    this.connection.incomingEvent$.pipe(operators_1.filter(m => m.event === \"Web3Response\")).subscribe({\n      next: this.handleIncomingEvent\n    }); // if session is marked destroyed, reset and reload\n\n    this.connection.sessionConfig$.pipe(operators_1.filter(c => !!c.metadata && c.metadata.__destroyed === \"1\")).subscribe({\n      next: this.resetAndReload\n    });\n    this.connection.sessionConfig$.pipe(operators_1.filter(c => c.metadata && c.metadata.WalletUsername !== undefined)).pipe(operators_1.mergeMap(c => aes256gcm.decrypt(c.metadata.WalletUsername, this.session.secret))).subscribe({\n      next: walletUsername => {\n        this.storage.setItem(WalletLinkRelayAbstract_1.WALLET_USER_NAME_KEY, walletUsername);\n      }\n    });\n    this.connection.sessionConfig$.pipe(operators_1.filter(c => c.metadata && c.metadata.ChainId !== undefined)).pipe(operators_1.mergeMap(c => aes256gcm.decrypt(c.metadata.ChainId, this.session.secret))).pipe(operators_1.distinctUntilChanged()).subscribe({\n      next: chainId => {\n        if (this.chainIdCallback) {\n          this.chainIdCallback(chainId);\n        }\n      }\n    });\n    this.connection.sessionConfig$.pipe(operators_1.filter(c => c.metadata && c.metadata.JsonRpcUrl !== undefined)).pipe(operators_1.mergeMap(c => aes256gcm.decrypt(c.metadata.JsonRpcUrl, this.session.secret))).pipe(operators_1.distinctUntilChanged()).subscribe({\n      next: jsonRpcURl => {\n        if (this.jsonRpcUrlCallback) {\n          this.jsonRpcUrlCallback(jsonRpcURl);\n        }\n      }\n    });\n    this.connection.sessionConfig$.pipe(operators_1.filter(c => c.metadata && c.metadata.EthereumAddress !== undefined)).pipe(operators_1.mergeMap(c => aes256gcm.decrypt(c.metadata.EthereumAddress, this.session.secret))).subscribe({\n      next: selectedAddress => {\n        if (this.accountsCallback) {\n          this.accountsCallback([selectedAddress]);\n        }\n\n        if (WalletLinkRelay.accountRequestCallbackIds.size > 0) {\n          // We get the ethereum address from the metadata.  If for whatever\n          // reason we don't get a response via an explicit web3 message\n          // we can still fulfill the eip1102 request.\n          Array.from(WalletLinkRelay.accountRequestCallbackIds.values()).forEach(id => {\n            const message = Web3ResponseMessage_1.Web3ResponseMessage({\n              id,\n              response: Web3Response_1.RequestEthereumAccountsResponse([selectedAddress])\n            });\n            this.invokeCallback(Object.assign(Object.assign({}, message), {\n              id\n            }));\n          });\n          WalletLinkRelay.accountRequestCallbackIds.clear();\n        }\n      }\n    });\n    this.ui = options.walletLinkUIConstructor({\n      walletLinkUrl: options.walletLinkUrl,\n      version: options.version,\n      darkMode: options.darkMode,\n      session: this.session,\n      connected$: this.connection.connected$\n    });\n    this.connection.connect();\n  }\n\n  attachUI() {\n    this.ui.attach();\n  }\n\n  resetAndReload() {\n    this.connection.setSessionMetadata(\"__destroyed\", \"1\").pipe(operators_1.timeout(1000), operators_1.catchError(_ => rxjs_1.of(null))).subscribe(_ => {\n      this.connection.destroy();\n      this.storage.clear();\n      this.ui.reloadUI();\n    });\n  }\n\n  setAppInfo(appName, appLogoUrl) {\n    this.appName = appName;\n    this.appLogoUrl = appLogoUrl;\n  }\n\n  getStorageItem(key) {\n    return this.storage.getItem(key);\n  }\n\n  setStorageItem(key, value) {\n    this.storage.setItem(key, value);\n  }\n\n  childRequestEthereumAccounts(childSessionId, childSessionSecret, dappName, dappLogoURL, dappURL) {\n    return this.sendChildRequest({\n      method: Web3Method_1.Web3Method.childRequestEthereumAccounts,\n      params: {\n        sessionId: childSessionId,\n        sessionSecret: childSessionSecret,\n        appName: dappName,\n        appLogoURL: dappLogoURL,\n        appURL: dappURL\n      }\n    });\n  }\n\n  requestEthereumAccounts() {\n    return this.sendRequest({\n      method: Web3Method_1.Web3Method.requestEthereumAccounts,\n      params: {\n        appName: this.appName,\n        appLogoUrl: this.appLogoUrl || null\n      }\n    });\n  }\n\n  signEthereumMessage(message, address, addPrefix, typedDataJson) {\n    return this.sendRequest({\n      method: Web3Method_1.Web3Method.signEthereumMessage,\n      params: {\n        message: util_1.hexStringFromBuffer(message, true),\n        address,\n        addPrefix,\n        typedDataJson: typedDataJson || null\n      }\n    });\n  }\n\n  ethereumAddressFromSignedMessage(message, signature, addPrefix) {\n    return this.sendRequest({\n      method: Web3Method_1.Web3Method.ethereumAddressFromSignedMessage,\n      params: {\n        message: util_1.hexStringFromBuffer(message, true),\n        signature: util_1.hexStringFromBuffer(signature, true),\n        addPrefix\n      }\n    });\n  }\n\n  signEthereumTransaction(params) {\n    return this.sendRequest({\n      method: Web3Method_1.Web3Method.signEthereumTransaction,\n      params: {\n        fromAddress: params.fromAddress,\n        toAddress: params.toAddress,\n        weiValue: util_1.bigIntStringFromBN(params.weiValue),\n        data: util_1.hexStringFromBuffer(params.data, true),\n        nonce: params.nonce,\n        gasPriceInWei: params.gasPriceInWei ? util_1.bigIntStringFromBN(params.gasPriceInWei) : null,\n        maxFeePerGas: params.gasPriceInWei ? util_1.bigIntStringFromBN(params.gasPriceInWei) : null,\n        maxPriorityFeePerGas: params.gasPriceInWei ? util_1.bigIntStringFromBN(params.gasPriceInWei) : null,\n        gasLimit: params.gasLimit ? util_1.bigIntStringFromBN(params.gasLimit) : null,\n        chainId: params.chainId,\n        shouldSubmit: false\n      }\n    });\n  }\n\n  signAndSubmitEthereumTransaction(params) {\n    return this.sendRequest({\n      method: Web3Method_1.Web3Method.signEthereumTransaction,\n      params: {\n        fromAddress: params.fromAddress,\n        toAddress: params.toAddress,\n        weiValue: util_1.bigIntStringFromBN(params.weiValue),\n        data: util_1.hexStringFromBuffer(params.data, true),\n        nonce: params.nonce,\n        gasPriceInWei: params.gasPriceInWei ? util_1.bigIntStringFromBN(params.gasPriceInWei) : null,\n        maxFeePerGas: params.maxFeePerGas ? util_1.bigIntStringFromBN(params.maxFeePerGas) : null,\n        maxPriorityFeePerGas: params.maxPriorityFeePerGas ? util_1.bigIntStringFromBN(params.maxPriorityFeePerGas) : null,\n        gasLimit: params.gasLimit ? util_1.bigIntStringFromBN(params.gasLimit) : null,\n        chainId: params.chainId,\n        shouldSubmit: true\n      }\n    });\n  }\n\n  submitEthereumTransaction(signedTransaction, chainId) {\n    return this.sendRequest({\n      method: Web3Method_1.Web3Method.submitEthereumTransaction,\n      params: {\n        signedTransaction: util_1.hexStringFromBuffer(signedTransaction, true),\n        chainId\n      }\n    });\n  }\n\n  scanQRCode(regExp) {\n    return this.sendRequest({\n      method: Web3Method_1.Web3Method.scanQRCode,\n      params: {\n        regExp\n      }\n    });\n  }\n\n  arbitraryRequest(data) {\n    return this.sendRequest({\n      method: Web3Method_1.Web3Method.arbitrary,\n      params: {\n        data\n      }\n    });\n  }\n\n  addEthereumChain(chainId, blockExplorerUrls, chainName, iconUrls, nativeCurrency) {\n    return this.sendRequest({\n      method: Web3Method_1.Web3Method.addEthereumChain,\n      params: {\n        chainId,\n        blockExplorerUrls,\n        chainName,\n        iconUrls,\n        nativeCurrency\n      }\n    });\n  }\n  /**\n   *\n   * @param request a request to connect the child session using a parent session's connection\n   *\n   * A note on why we're not using the sendRequest method.  The sendRequest function doesn't have\n   * any way to tell when a message has been sent - it either times out after 60 seconds, or\n   * waits until it gets a response from the mobile client.  In the case of sending a child request,\n   * we don't wait for a response from the mobile client, we continue as soon as we know the server\n   * has received the message.  Hence why we have a separate method here.\n   */\n\n\n  sendChildRequest(request) {\n    return new Promise((resolve, reject) => {\n      const id = util_1.randomBytesHex(8);\n      const message = Web3RequestMessage_1.Web3RequestMessage({\n        id,\n        request\n      });\n      this.publishEvent(\"Web3Request\", message, true).subscribe({\n        next: ret => {\n          resolve(Web3Response_1.ChildRequestEthereumAccountsResponse(ret));\n        },\n        error: err => {\n          reject(new Error(err.message));\n        }\n      });\n    });\n  }\n\n  sendRequest(request) {\n    return new Promise((resolve, reject) => {\n      var _a;\n\n      let hideSnackbarItem = null;\n      const id = util_1.randomBytesHex(8);\n      const isRequestAccounts = request.method === Web3Method_1.Web3Method.requestEthereumAccounts;\n      const isSwitchEthereumChain = request.method === Web3Method_1.Web3Method.switchEthereumChain;\n\n      const cancel = () => {\n        this.publishWeb3RequestCanceledEvent(id);\n        this.handleWeb3ResponseMessage(Web3ResponseMessage_1.Web3ResponseMessage({\n          id,\n          response: Web3Response_1.ErrorResponse(request.method, \"User rejected request\")\n        }));\n        hideSnackbarItem === null || hideSnackbarItem === void 0 ? void 0 : hideSnackbarItem();\n      };\n\n      if (isRequestAccounts) {\n        const userAgent = ((_a = window === null || window === void 0 ? void 0 : window.navigator) === null || _a === void 0 ? void 0 : _a.userAgent) || null;\n\n        if (userAgent && /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(userAgent)) {\n          window.location.href = `https://go.cb-w.com/xoXnYwQimhb?cb_url=${window.location.href}`;\n          return;\n        }\n\n        if (this.ui.inlineAccountsResponse()) {\n          const onAccounts = accounts => {\n            this.handleWeb3ResponseMessage(Web3ResponseMessage_1.Web3ResponseMessage({\n              id,\n              response: Web3Response_1.RequestEthereumAccountsResponse(accounts)\n            }));\n          };\n\n          this.ui.requestEthereumAccounts({\n            onCancel: cancel,\n            onAccounts\n          });\n        } else {\n          this.ui.requestEthereumAccounts({\n            onCancel: cancel\n          });\n        }\n\n        WalletLinkRelay.accountRequestCallbackIds.add(id);\n      } else if (request.method === Web3Method_1.Web3Method.switchEthereumChain || request.method === Web3Method_1.Web3Method.addEthereumChain) {\n        const cancel = () => {\n          this.handleWeb3ResponseMessage(Web3ResponseMessage_1.Web3ResponseMessage({\n            id,\n            response: Web3Response_1.SwitchEthereumChainResponse(false)\n          }));\n        };\n\n        const approve = () => {\n          this.handleWeb3ResponseMessage(Web3ResponseMessage_1.Web3ResponseMessage({\n            id,\n            response: Web3Response_1.SwitchEthereumChainResponse(true)\n          }));\n        };\n\n        this.ui.switchEthereumChain({\n          onCancel: cancel,\n          onApprove: approve,\n          chainId: request.params.chainId\n        });\n\n        if (!this.ui.inlineSwitchEthereumChain()) {\n          hideSnackbarItem = this.ui.showConnecting({\n            onCancel: cancel,\n            onResetConnection: this.resetAndReload\n          });\n        }\n      } else {\n        hideSnackbarItem = this.ui.showConnecting({\n          onCancel: cancel,\n          onResetConnection: this.resetAndReload\n        });\n      }\n\n      this.relayEventManager.callbacks.set(id, response => {\n        this.ui.hideRequestEthereumAccounts();\n        hideSnackbarItem === null || hideSnackbarItem === void 0 ? void 0 : hideSnackbarItem();\n\n        if (response.errorMessage) {\n          return reject(new Error(response.errorMessage));\n        }\n\n        resolve(response);\n      });\n\n      if (isRequestAccounts && this.ui.inlineAccountsResponse() || isSwitchEthereumChain && this.ui.inlineSwitchEthereumChain()) {\n        return;\n      }\n\n      this.publishWeb3RequestEvent(id, request);\n    });\n  }\n\n  setConnectDisabled(disabled) {\n    this.ui.setConnectDisabled(disabled);\n  }\n\n  setAccountsCallback(accountsCallback) {\n    this.accountsCallback = accountsCallback;\n  }\n\n  setChainIdCallback(chainIdCallback) {\n    this.chainIdCallback = chainIdCallback;\n  }\n\n  setJsonRpcUrlCallback(jsonRpcUrlCallback) {\n    this.jsonRpcUrlCallback = jsonRpcUrlCallback;\n  }\n\n  publishWeb3RequestEvent(id, request) {\n    const message = Web3RequestMessage_1.Web3RequestMessage({\n      id,\n      request\n    });\n    this.publishEvent(\"Web3Request\", message, true).subscribe({\n      error: err => {\n        this.handleWeb3ResponseMessage(Web3ResponseMessage_1.Web3ResponseMessage({\n          id: message.id,\n          response: {\n            method: message.request.method,\n            errorMessage: err.message\n          }\n        }));\n      }\n    });\n  }\n\n  publishWeb3RequestCanceledEvent(id) {\n    const message = Web3RequestCanceledMessage_1.Web3RequestCanceledMessage(id);\n    this.publishEvent(\"Web3RequestCanceled\", message, false).subscribe();\n  }\n\n  publishEvent(event, message, callWebhook) {\n    const secret = this.session.secret;\n    return new rxjs_1.Observable(subscriber => {\n      aes256gcm.encrypt(JSON.stringify(Object.assign(Object.assign({}, message), {\n        origin: location.origin\n      })), secret).then(encrypted => {\n        subscriber.next(encrypted);\n        subscriber.complete();\n      });\n    }).pipe(operators_1.mergeMap(encrypted => {\n      return this.connection.publishEvent(event, encrypted, callWebhook);\n    }));\n  }\n\n  handleIncomingEvent(event) {\n    try {\n      aes256gcm.decrypt(event.data, this.session.secret).pipe(operators_1.map(c => JSON.parse(c))).subscribe({\n        next: json => {\n          const message = Web3ResponseMessage_1.isWeb3ResponseMessage(json) ? json : null;\n\n          if (!message) {\n            return;\n          }\n\n          this.handleWeb3ResponseMessage(message);\n        }\n      });\n    } catch (_a) {\n      return;\n    }\n  }\n\n  handleWeb3ResponseMessage(message) {\n    const {\n      response\n    } = message;\n\n    if (Web3Response_1.isRequestEthereumAccountsResponse(response)) {\n      Array.from(WalletLinkRelay.accountRequestCallbackIds.values()).forEach(id => this.invokeCallback(Object.assign(Object.assign({}, message), {\n        id\n      })));\n      WalletLinkRelay.accountRequestCallbackIds.clear();\n      return;\n    }\n\n    this.invokeCallback(message);\n  }\n\n  invokeCallback(message) {\n    const callback = this.relayEventManager.callbacks.get(message.id);\n\n    if (callback) {\n      callback(message.response);\n      this.relayEventManager.callbacks.delete(message.id);\n    }\n  }\n\n  switchEthereumChain(chainId) {\n    return this.sendRequest({\n      method: Web3Method_1.Web3Method.switchEthereumChain,\n      params: {\n        chainId\n      }\n    });\n  }\n\n}\n\nWalletLinkRelay.accountRequestCallbackIds = new Set();\n\n__decorate([bind_decorator_1.default], WalletLinkRelay.prototype, \"resetAndReload\", null);\n\n__decorate([bind_decorator_1.default], WalletLinkRelay.prototype, \"handleIncomingEvent\", null);\n\nexports.WalletLinkRelay = WalletLinkRelay;","map":{"version":3,"sources":["/home/mark/repo/tailwind-deez/client/node_modules/walletlink/dist/relay/WalletLinkRelay.js"],"names":["__createBinding","Object","create","o","m","k","k2","undefined","defineProperty","enumerable","get","__setModuleDefault","v","value","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","d","Reflect","decorate","i","__importStar","mod","__esModule","result","prototype","hasOwnProperty","call","__importDefault","exports","WalletLinkRelay","bind_decorator_1","require","rxjs_1","operators_1","WalletLinkConnection_1","util_1","aes256gcm","Session_1","Web3Method_1","Web3RequestCanceledMessage_1","Web3RequestMessage_1","Web3Response_1","Web3ResponseMessage_1","WalletLinkRelayAbstract_1","constructor","options","accountsCallback","chainIdCallback","jsonRpcUrlCallback","appName","appLogoUrl","walletLinkUrl","storage","session","Session","load","save","relayEventManager","connection","WalletLinkConnection","id","incomingEvent$","pipe","filter","event","subscribe","next","handleIncomingEvent","sessionConfig$","metadata","__destroyed","resetAndReload","WalletUsername","mergeMap","decrypt","secret","walletUsername","setItem","WALLET_USER_NAME_KEY","ChainId","distinctUntilChanged","chainId","JsonRpcUrl","jsonRpcURl","EthereumAddress","selectedAddress","accountRequestCallbackIds","size","Array","from","values","forEach","message","Web3ResponseMessage","response","RequestEthereumAccountsResponse","invokeCallback","assign","clear","ui","walletLinkUIConstructor","version","darkMode","connected$","connect","attachUI","attach","setSessionMetadata","timeout","catchError","_","of","destroy","reloadUI","setAppInfo","getStorageItem","getItem","setStorageItem","childRequestEthereumAccounts","childSessionId","childSessionSecret","dappName","dappLogoURL","dappURL","sendChildRequest","method","Web3Method","params","sessionId","sessionSecret","appLogoURL","appURL","requestEthereumAccounts","sendRequest","signEthereumMessage","address","addPrefix","typedDataJson","hexStringFromBuffer","ethereumAddressFromSignedMessage","signature","signEthereumTransaction","fromAddress","toAddress","weiValue","bigIntStringFromBN","data","nonce","gasPriceInWei","maxFeePerGas","maxPriorityFeePerGas","gasLimit","shouldSubmit","signAndSubmitEthereumTransaction","submitEthereumTransaction","signedTransaction","scanQRCode","regExp","arbitraryRequest","arbitrary","addEthereumChain","blockExplorerUrls","chainName","iconUrls","nativeCurrency","request","Promise","resolve","reject","randomBytesHex","Web3RequestMessage","publishEvent","ret","ChildRequestEthereumAccountsResponse","error","err","Error","_a","hideSnackbarItem","isRequestAccounts","isSwitchEthereumChain","switchEthereumChain","cancel","publishWeb3RequestCanceledEvent","handleWeb3ResponseMessage","ErrorResponse","userAgent","window","navigator","test","location","href","inlineAccountsResponse","onAccounts","accounts","onCancel","add","SwitchEthereumChainResponse","approve","onApprove","inlineSwitchEthereumChain","showConnecting","onResetConnection","callbacks","set","hideRequestEthereumAccounts","errorMessage","publishWeb3RequestEvent","setConnectDisabled","disabled","setAccountsCallback","setChainIdCallback","setJsonRpcUrlCallback","Web3RequestCanceledMessage","callWebhook","Observable","subscriber","encrypt","JSON","stringify","origin","then","encrypted","complete","map","parse","json","isWeb3ResponseMessage","isRequestEthereumAccountsResponse","callback","delete","Set","default"],"mappings":"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","sourcesContent":["\"use strict\";\n// Copyright (c) 2018-2020 WalletLink.org <https://www.walletlink.org/>\n// Copyright (c) 2018-2020 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletLinkRelay = void 0;\nconst bind_decorator_1 = __importDefault(require(\"bind-decorator\"));\nconst rxjs_1 = require(\"rxjs\");\nconst operators_1 = require(\"rxjs/operators\");\nconst WalletLinkConnection_1 = require(\"../connection/WalletLinkConnection\");\nconst util_1 = require(\"../util\");\nconst aes256gcm = __importStar(require(\"./aes256gcm\"));\nconst Session_1 = require(\"./Session\");\nconst Web3Method_1 = require(\"./Web3Method\");\nconst Web3RequestCanceledMessage_1 = require(\"./Web3RequestCanceledMessage\");\nconst Web3RequestMessage_1 = require(\"./Web3RequestMessage\");\nconst Web3Response_1 = require(\"./Web3Response\");\nconst Web3ResponseMessage_1 = require(\"./Web3ResponseMessage\");\nconst WalletLinkRelayAbstract_1 = require(\"./WalletLinkRelayAbstract\");\nclass WalletLinkRelay {\n    constructor(options) {\n        this.accountsCallback = null;\n        this.chainIdCallback = null;\n        this.jsonRpcUrlCallback = null;\n        this.appName = \"\";\n        this.appLogoUrl = null;\n        this.walletLinkUrl = options.walletLinkUrl;\n        this.storage = options.storage;\n        this.session =\n            Session_1.Session.load(options.storage) || new Session_1.Session(options.storage).save();\n        this.relayEventManager = options.relayEventManager;\n        this.connection = new WalletLinkConnection_1.WalletLinkConnection(this.session.id, this.session.key, this.walletLinkUrl);\n        this.connection.incomingEvent$\n            .pipe(operators_1.filter(m => m.event === \"Web3Response\"))\n            .subscribe({ next: this.handleIncomingEvent });\n        // if session is marked destroyed, reset and reload\n        this.connection.sessionConfig$\n            .pipe(operators_1.filter(c => !!c.metadata && c.metadata.__destroyed === \"1\"))\n            .subscribe({ next: this.resetAndReload });\n        this.connection.sessionConfig$\n            .pipe(operators_1.filter(c => c.metadata && c.metadata.WalletUsername !== undefined))\n            .pipe(operators_1.mergeMap(c => aes256gcm.decrypt(c.metadata.WalletUsername, this.session.secret)))\n            .subscribe({\n            next: walletUsername => {\n                this.storage.setItem(WalletLinkRelayAbstract_1.WALLET_USER_NAME_KEY, walletUsername);\n            }\n        });\n        this.connection.sessionConfig$\n            .pipe(operators_1.filter(c => c.metadata && c.metadata.ChainId !== undefined))\n            .pipe(operators_1.mergeMap(c => aes256gcm.decrypt(c.metadata.ChainId, this.session.secret)))\n            .pipe(operators_1.distinctUntilChanged())\n            .subscribe({ next: chainId => {\n                if (this.chainIdCallback) {\n                    this.chainIdCallback(chainId);\n                }\n            }\n        });\n        this.connection.sessionConfig$\n            .pipe(operators_1.filter(c => c.metadata && c.metadata.JsonRpcUrl !== undefined))\n            .pipe(operators_1.mergeMap(c => aes256gcm.decrypt(c.metadata.JsonRpcUrl, this.session.secret)))\n            .pipe(operators_1.distinctUntilChanged())\n            .subscribe({\n            next: jsonRpcURl => {\n                if (this.jsonRpcUrlCallback) {\n                    this.jsonRpcUrlCallback(jsonRpcURl);\n                }\n            },\n        });\n        this.connection.sessionConfig$\n            .pipe(operators_1.filter(c => c.metadata && c.metadata.EthereumAddress !== undefined))\n            .pipe(operators_1.mergeMap(c => aes256gcm.decrypt(c.metadata.EthereumAddress, this.session.secret)))\n            .subscribe({\n            next: selectedAddress => {\n                if (this.accountsCallback) {\n                    this.accountsCallback([selectedAddress]);\n                }\n                if (WalletLinkRelay.accountRequestCallbackIds.size > 0) {\n                    // We get the ethereum address from the metadata.  If for whatever\n                    // reason we don't get a response via an explicit web3 message\n                    // we can still fulfill the eip1102 request.\n                    Array.from(WalletLinkRelay.accountRequestCallbackIds.values()).forEach(id => {\n                        const message = Web3ResponseMessage_1.Web3ResponseMessage({\n                            id,\n                            response: Web3Response_1.RequestEthereumAccountsResponse([selectedAddress])\n                        });\n                        this.invokeCallback(Object.assign(Object.assign({}, message), { id }));\n                    });\n                    WalletLinkRelay.accountRequestCallbackIds.clear();\n                }\n            }\n        });\n        this.ui = options.walletLinkUIConstructor({\n            walletLinkUrl: options.walletLinkUrl,\n            version: options.version,\n            darkMode: options.darkMode,\n            session: this.session,\n            connected$: this.connection.connected$\n        });\n        this.connection.connect();\n    }\n    attachUI() {\n        this.ui.attach();\n    }\n    resetAndReload() {\n        this.connection\n            .setSessionMetadata(\"__destroyed\", \"1\")\n            .pipe(operators_1.timeout(1000), operators_1.catchError(_ => rxjs_1.of(null)))\n            .subscribe(_ => {\n            this.connection.destroy();\n            this.storage.clear();\n            this.ui.reloadUI();\n        });\n    }\n    setAppInfo(appName, appLogoUrl) {\n        this.appName = appName;\n        this.appLogoUrl = appLogoUrl;\n    }\n    getStorageItem(key) {\n        return this.storage.getItem(key);\n    }\n    setStorageItem(key, value) {\n        this.storage.setItem(key, value);\n    }\n    childRequestEthereumAccounts(childSessionId, childSessionSecret, dappName, dappLogoURL, dappURL) {\n        return this.sendChildRequest({\n            method: Web3Method_1.Web3Method.childRequestEthereumAccounts,\n            params: {\n                sessionId: childSessionId,\n                sessionSecret: childSessionSecret,\n                appName: dappName,\n                appLogoURL: dappLogoURL,\n                appURL: dappURL\n            }\n        });\n    }\n    requestEthereumAccounts() {\n        return this.sendRequest({\n            method: Web3Method_1.Web3Method.requestEthereumAccounts,\n            params: {\n                appName: this.appName,\n                appLogoUrl: this.appLogoUrl || null\n            }\n        });\n    }\n    signEthereumMessage(message, address, addPrefix, typedDataJson) {\n        return this.sendRequest({\n            method: Web3Method_1.Web3Method.signEthereumMessage,\n            params: {\n                message: util_1.hexStringFromBuffer(message, true),\n                address,\n                addPrefix,\n                typedDataJson: typedDataJson || null\n            }\n        });\n    }\n    ethereumAddressFromSignedMessage(message, signature, addPrefix) {\n        return this.sendRequest({\n            method: Web3Method_1.Web3Method.ethereumAddressFromSignedMessage,\n            params: {\n                message: util_1.hexStringFromBuffer(message, true),\n                signature: util_1.hexStringFromBuffer(signature, true),\n                addPrefix\n            }\n        });\n    }\n    signEthereumTransaction(params) {\n        return this.sendRequest({\n            method: Web3Method_1.Web3Method.signEthereumTransaction,\n            params: {\n                fromAddress: params.fromAddress,\n                toAddress: params.toAddress,\n                weiValue: util_1.bigIntStringFromBN(params.weiValue),\n                data: util_1.hexStringFromBuffer(params.data, true),\n                nonce: params.nonce,\n                gasPriceInWei: params.gasPriceInWei\n                    ? util_1.bigIntStringFromBN(params.gasPriceInWei)\n                    : null,\n                maxFeePerGas: params.gasPriceInWei\n                    ? util_1.bigIntStringFromBN(params.gasPriceInWei)\n                    : null,\n                maxPriorityFeePerGas: params.gasPriceInWei\n                    ? util_1.bigIntStringFromBN(params.gasPriceInWei)\n                    : null,\n                gasLimit: params.gasLimit ? util_1.bigIntStringFromBN(params.gasLimit) : null,\n                chainId: params.chainId,\n                shouldSubmit: false\n            }\n        });\n    }\n    signAndSubmitEthereumTransaction(params) {\n        return this.sendRequest({\n            method: Web3Method_1.Web3Method.signEthereumTransaction,\n            params: {\n                fromAddress: params.fromAddress,\n                toAddress: params.toAddress,\n                weiValue: util_1.bigIntStringFromBN(params.weiValue),\n                data: util_1.hexStringFromBuffer(params.data, true),\n                nonce: params.nonce,\n                gasPriceInWei: params.gasPriceInWei\n                    ? util_1.bigIntStringFromBN(params.gasPriceInWei)\n                    : null,\n                maxFeePerGas: params.maxFeePerGas\n                    ? util_1.bigIntStringFromBN(params.maxFeePerGas)\n                    : null,\n                maxPriorityFeePerGas: params.maxPriorityFeePerGas\n                    ? util_1.bigIntStringFromBN(params.maxPriorityFeePerGas)\n                    : null,\n                gasLimit: params.gasLimit ? util_1.bigIntStringFromBN(params.gasLimit) : null,\n                chainId: params.chainId,\n                shouldSubmit: true\n            }\n        });\n    }\n    submitEthereumTransaction(signedTransaction, chainId) {\n        return this.sendRequest({\n            method: Web3Method_1.Web3Method.submitEthereumTransaction,\n            params: {\n                signedTransaction: util_1.hexStringFromBuffer(signedTransaction, true),\n                chainId\n            }\n        });\n    }\n    scanQRCode(regExp) {\n        return this.sendRequest({\n            method: Web3Method_1.Web3Method.scanQRCode,\n            params: { regExp }\n        });\n    }\n    arbitraryRequest(data) {\n        return this.sendRequest({\n            method: Web3Method_1.Web3Method.arbitrary,\n            params: { data }\n        });\n    }\n    addEthereumChain(chainId, blockExplorerUrls, chainName, iconUrls, nativeCurrency) {\n        return this.sendRequest({\n            method: Web3Method_1.Web3Method.addEthereumChain,\n            params: {\n                chainId,\n                blockExplorerUrls,\n                chainName,\n                iconUrls,\n                nativeCurrency\n            }\n        });\n    }\n    /**\n     *\n     * @param request a request to connect the child session using a parent session's connection\n     *\n     * A note on why we're not using the sendRequest method.  The sendRequest function doesn't have\n     * any way to tell when a message has been sent - it either times out after 60 seconds, or\n     * waits until it gets a response from the mobile client.  In the case of sending a child request,\n     * we don't wait for a response from the mobile client, we continue as soon as we know the server\n     * has received the message.  Hence why we have a separate method here.\n     */\n    sendChildRequest(request) {\n        return new Promise((resolve, reject) => {\n            const id = util_1.randomBytesHex(8);\n            const message = Web3RequestMessage_1.Web3RequestMessage({ id, request });\n            this.publishEvent(\"Web3Request\", message, true)\n                .subscribe({\n                next: ret => {\n                    resolve(Web3Response_1.ChildRequestEthereumAccountsResponse(ret));\n                },\n                error: err => {\n                    reject(new Error(err.message));\n                }\n            });\n        });\n    }\n    sendRequest(request) {\n        return new Promise((resolve, reject) => {\n            var _a;\n            let hideSnackbarItem = null;\n            const id = util_1.randomBytesHex(8);\n            const isRequestAccounts = request.method === Web3Method_1.Web3Method.requestEthereumAccounts;\n            const isSwitchEthereumChain = request.method === Web3Method_1.Web3Method.switchEthereumChain;\n            const cancel = () => {\n                this.publishWeb3RequestCanceledEvent(id);\n                this.handleWeb3ResponseMessage(Web3ResponseMessage_1.Web3ResponseMessage({\n                    id,\n                    response: Web3Response_1.ErrorResponse(request.method, \"User rejected request\")\n                }));\n                hideSnackbarItem === null || hideSnackbarItem === void 0 ? void 0 : hideSnackbarItem();\n            };\n            if (isRequestAccounts) {\n                const userAgent = ((_a = window === null || window === void 0 ? void 0 : window.navigator) === null || _a === void 0 ? void 0 : _a.userAgent) || null;\n                if (userAgent &&\n                    /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(userAgent)) {\n                    window.location.href = `https://go.cb-w.com/xoXnYwQimhb?cb_url=${window.location.href}`;\n                    return;\n                }\n                if (this.ui.inlineAccountsResponse()) {\n                    const onAccounts = (accounts) => {\n                        this.handleWeb3ResponseMessage(Web3ResponseMessage_1.Web3ResponseMessage({\n                            id,\n                            response: Web3Response_1.RequestEthereumAccountsResponse(accounts)\n                        }));\n                    };\n                    this.ui.requestEthereumAccounts({\n                        onCancel: cancel,\n                        onAccounts\n                    });\n                }\n                else {\n                    this.ui.requestEthereumAccounts({\n                        onCancel: cancel\n                    });\n                }\n                WalletLinkRelay.accountRequestCallbackIds.add(id);\n            }\n            else if (request.method === Web3Method_1.Web3Method.switchEthereumChain || request.method === Web3Method_1.Web3Method.addEthereumChain) {\n                const cancel = () => {\n                    this.handleWeb3ResponseMessage(Web3ResponseMessage_1.Web3ResponseMessage({\n                        id,\n                        response: Web3Response_1.SwitchEthereumChainResponse(false),\n                    }));\n                };\n                const approve = () => {\n                    this.handleWeb3ResponseMessage(Web3ResponseMessage_1.Web3ResponseMessage({\n                        id,\n                        response: Web3Response_1.SwitchEthereumChainResponse(true),\n                    }));\n                };\n                this.ui.switchEthereumChain({\n                    onCancel: cancel,\n                    onApprove: approve,\n                    chainId: request.params.chainId,\n                });\n                if (!this.ui.inlineSwitchEthereumChain()) {\n                    hideSnackbarItem = this.ui.showConnecting({\n                        onCancel: cancel,\n                        onResetConnection: this.resetAndReload,\n                    });\n                }\n            }\n            else {\n                hideSnackbarItem = this.ui.showConnecting({\n                    onCancel: cancel,\n                    onResetConnection: this.resetAndReload\n                });\n            }\n            this.relayEventManager.callbacks.set(id, response => {\n                this.ui.hideRequestEthereumAccounts();\n                hideSnackbarItem === null || hideSnackbarItem === void 0 ? void 0 : hideSnackbarItem();\n                if (response.errorMessage) {\n                    return reject(new Error(response.errorMessage));\n                }\n                resolve(response);\n            });\n            if ((isRequestAccounts && this.ui.inlineAccountsResponse()) ||\n                (isSwitchEthereumChain && this.ui.inlineSwitchEthereumChain())) {\n                return;\n            }\n            this.publishWeb3RequestEvent(id, request);\n        });\n    }\n    setConnectDisabled(disabled) {\n        this.ui.setConnectDisabled(disabled);\n    }\n    setAccountsCallback(accountsCallback) {\n        this.accountsCallback = accountsCallback;\n    }\n    setChainIdCallback(chainIdCallback) {\n        this.chainIdCallback = chainIdCallback;\n    }\n    setJsonRpcUrlCallback(jsonRpcUrlCallback) {\n        this.jsonRpcUrlCallback = jsonRpcUrlCallback;\n    }\n    publishWeb3RequestEvent(id, request) {\n        const message = Web3RequestMessage_1.Web3RequestMessage({ id, request });\n        this.publishEvent(\"Web3Request\", message, true).subscribe({\n            error: err => {\n                this.handleWeb3ResponseMessage(Web3ResponseMessage_1.Web3ResponseMessage({\n                    id: message.id,\n                    response: {\n                        method: message.request.method,\n                        errorMessage: err.message\n                    }\n                }));\n            }\n        });\n    }\n    publishWeb3RequestCanceledEvent(id) {\n        const message = Web3RequestCanceledMessage_1.Web3RequestCanceledMessage(id);\n        this.publishEvent(\"Web3RequestCanceled\", message, false).subscribe();\n    }\n    publishEvent(event, message, callWebhook) {\n        const secret = this.session.secret;\n        return new rxjs_1.Observable((subscriber) => {\n            aes256gcm.encrypt(JSON.stringify(Object.assign(Object.assign({}, message), { origin: location.origin })), secret).then((encrypted) => {\n                subscriber.next(encrypted);\n                subscriber.complete();\n            });\n        }).pipe(operators_1.mergeMap((encrypted) => {\n            return this.connection.publishEvent(event, encrypted, callWebhook);\n        }));\n    }\n    handleIncomingEvent(event) {\n        try {\n            aes256gcm.decrypt(event.data, this.session.secret)\n                .pipe(operators_1.map(c => JSON.parse(c)))\n                .subscribe({\n                next: json => {\n                    const message = Web3ResponseMessage_1.isWeb3ResponseMessage(json) ? json : null;\n                    if (!message) {\n                        return;\n                    }\n                    this.handleWeb3ResponseMessage(message);\n                }\n            });\n        }\n        catch (_a) {\n            return;\n        }\n    }\n    handleWeb3ResponseMessage(message) {\n        const { response } = message;\n        if (Web3Response_1.isRequestEthereumAccountsResponse(response)) {\n            Array.from(WalletLinkRelay.accountRequestCallbackIds.values()).forEach(id => this.invokeCallback(Object.assign(Object.assign({}, message), { id })));\n            WalletLinkRelay.accountRequestCallbackIds.clear();\n            return;\n        }\n        this.invokeCallback(message);\n    }\n    invokeCallback(message) {\n        const callback = this.relayEventManager.callbacks.get(message.id);\n        if (callback) {\n            callback(message.response);\n            this.relayEventManager.callbacks.delete(message.id);\n        }\n    }\n    switchEthereumChain(chainId) {\n        return this.sendRequest({\n            method: Web3Method_1.Web3Method.switchEthereumChain,\n            params: {\n                chainId\n            }\n        });\n    }\n}\nWalletLinkRelay.accountRequestCallbackIds = new Set();\n__decorate([\n    bind_decorator_1.default\n], WalletLinkRelay.prototype, \"resetAndReload\", null);\n__decorate([\n    bind_decorator_1.default\n], WalletLinkRelay.prototype, \"handleIncomingEvent\", null);\nexports.WalletLinkRelay = WalletLinkRelay;\n"]},"metadata":{},"sourceType":"script"}