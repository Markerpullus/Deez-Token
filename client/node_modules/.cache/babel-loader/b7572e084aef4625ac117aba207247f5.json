{"ast":null,"code":"var _jsxFileName = \"/home/mark/repo/tailwind-deez/client/src/WalletConnector.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useWallet, UseWalletProvider } from 'use-wallet';\nimport { Button, Typography } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Connector({\n  handleConnect\n}) {\n  _s();\n\n  const wallet = useWallet();\n  useEffect(() => {\n    if (wallet.status === \"connected\") handleConnect(wallet.account);\n  }, [wallet.status]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    align: \"right\",\n    style: {\n      flexGrow: 1\n    },\n    children: wallet.status === 'connected' ? /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h7\",\n      children: wallet.account\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"Contained\",\n      onClick: () => {\n        wallet.connect();\n      },\n      children: \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n} // Wrap everything in <UseWalletProvider />\n\n\n_s(Connector, \"Op0/wBxK9c7Ln+hGs0edgZQ9zC0=\", false, function () {\n  return [useWallet];\n});\n\n_c = Connector;\nexport default function WalletConnector({\n  handleConnect\n}) {\n  return /*#__PURE__*/_jsxDEV(UseWalletProvider, {\n    chainId: 1337,\n    connectors: {\n      // This is how connectors get configured\n      portis: {\n        dAppId: 'my-dapp-id-123-xyz'\n      }\n    },\n    children: /*#__PURE__*/_jsxDEV(Connector, {\n      handleConnect: handleConnect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_c2 = WalletConnector;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Connector\");\n$RefreshReg$(_c2, \"WalletConnector\");","map":{"version":3,"sources":["/home/mark/repo/tailwind-deez/client/src/WalletConnector.js"],"names":["React","useEffect","useWallet","UseWalletProvider","Button","Typography","Connector","handleConnect","wallet","status","account","flexGrow","connect","WalletConnector","portis","dAppId"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,iBAApB,QAA6C,YAA7C;AACA,SAASC,MAAT,EAAiBC,UAAjB,QAAmC,eAAnC;;;AAEA,SAASC,SAAT,CAAmB;AAAEC,EAAAA;AAAF,CAAnB,EAAsC;AAAA;;AACpC,QAAMC,MAAM,GAAGN,SAAS,EAAxB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIO,MAAM,CAACC,MAAP,KAAkB,WAAtB,EAAmCF,aAAa,CAACC,MAAM,CAACE,OAAR,CAAb;AACtC,GAFQ,EAEN,CAACF,MAAM,CAACC,MAAR,CAFM,CAAT;AAIA,sBACE;AAAK,IAAA,KAAK,EAAC,OAAX;AAAmB,IAAA,KAAK,EAAE;AAACE,MAAAA,QAAQ,EAAE;AAAX,KAA1B;AAAA,cACGH,MAAM,CAACC,MAAP,KAAkB,WAAlB,gBACC,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAA,gBAA0BD,MAAM,CAACE;AAAjC;AAAA;AAAA;AAAA;AAAA,YADD,gBAGC,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,OAAO,EAAE,MAAM;AAAEF,QAAAA,MAAM,CAACI,OAAP;AAAkB,OAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,UADF;AASD,C,CAED;;;GAlBSN,S;UACQJ,S;;;KADRI,S;AAmBT,eAAe,SAASO,eAAT,CAAyB;AAAEN,EAAAA;AAAF,CAAzB,EAA4C;AACzD,sBACE,QAAC,iBAAD;AACE,IAAA,OAAO,EAAE,IADX;AAEE,IAAA,UAAU,EAAE;AACV;AACAO,MAAAA,MAAM,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV;AAFE,KAFd;AAAA,2BAOE,QAAC,SAAD;AAAW,MAAA,aAAa,EAAER;AAA1B;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;MAZuBM,e","sourcesContent":["import React, { useEffect } from 'react'\nimport { useWallet, UseWalletProvider } from 'use-wallet'\nimport { Button, Typography } from \"@mui/material\"\n\nfunction Connector({ handleConnect }) {\n  const wallet = useWallet()\n\n  useEffect(() => {\n      if (wallet.status === \"connected\") handleConnect(wallet.account)\n  }, [wallet.status])\n\n  return (\n    <div align=\"right\" style={{flexGrow: 1}}>\n      {wallet.status === 'connected' ? (\n        <Typography variant=\"h7\">{wallet.account}</Typography>\n      ) : (\n        <Button variant=\"Contained\" onClick={() => { wallet.connect() }}>Connect Wallet</Button>\n      )}\n    </div>\n  )\n}\n\n// Wrap everything in <UseWalletProvider />\nexport default function WalletConnector({ handleConnect }) {\n  return (\n    <UseWalletProvider\n      chainId={1337}\n      connectors={{\n        // This is how connectors get configured\n        portis: { dAppId: 'my-dapp-id-123-xyz' },\n      }}\n    >\n      <Connector handleConnect={handleConnect}/>\n    </UseWalletProvider>\n  )\n}"]},"metadata":{},"sourceType":"module"}