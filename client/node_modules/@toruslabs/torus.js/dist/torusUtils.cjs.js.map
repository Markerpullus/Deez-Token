{"version":3,"sources":["webpack://TorusUtils/webpack/bootstrap","webpack://TorusUtils/external \"bn.js\"","webpack://TorusUtils/external \"@babel/runtime/regenerator\"","webpack://TorusUtils/external \"@babel/runtime/helpers/asyncToGenerator\"","webpack://TorusUtils/external \"@toruslabs/http-helpers\"","webpack://TorusUtils/external \"web3-utils\"","webpack://TorusUtils/external \"@babel/runtime/helpers/classCallCheck\"","webpack://TorusUtils/external \"json-stable-stringify\"","webpack://TorusUtils/external \"@babel/runtime/helpers/getPrototypeOf\"","webpack://TorusUtils/external \"@toruslabs/eccrypto\"","webpack://TorusUtils/external \"@babel/runtime/helpers/defineProperty\"","webpack://TorusUtils/external \"@babel/runtime/helpers/inherits\"","webpack://TorusUtils/external \"@babel/runtime/helpers/possibleConstructorReturn\"","webpack://TorusUtils/external \"@babel/runtime/helpers/wrapNativeSuper\"","webpack://TorusUtils/external \"@babel/runtime/helpers/toConsumableArray\"","webpack://TorusUtils/external \"@babel/runtime/helpers/typeof\"","webpack://TorusUtils/external \"@babel/runtime/helpers/createClass\"","webpack://TorusUtils/external \"elliptic\"","webpack://TorusUtils/external \"memory-cache\"","webpack://TorusUtils/external \"loglevel\"","webpack://TorusUtils/./src/loglevel.js","webpack://TorusUtils/./src/some.js","webpack://TorusUtils/./src/utils.js","webpack://TorusUtils/./src/torus.js","webpack://TorusUtils/./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","log","loglevel","getLogger","disableAll","SomeError","errors","responses","predicate","Error","Some","promises","Promise","resolve","reject","predicateError","finishedCount","sharedState","resolved","errorArr","Array","length","fill","undefined","resultArr","forEach","x","index","then","resp","catch","error","finally","slice","data","_","values","reduce","acc","z","str","id","startsWith","charAt","toUpperCase","msg","map","it","join","message","GetOrSetNonceError","kCombinations","k","set","from","cur","combs","tailCombs","j","push","thresholdSame","arr","hashMap","JsonStringify","keyLookup","endpoints","verifier","verifierId","a","lookupPromises","post","generateJsonRPCObject","verifier_id","toString","err","lookupResults","lookupShares","filter","x1","errorResult","x2","keyResult","x3","result","JSON","stringify","waitKeyLookup","timeout","setTimeout","keyAssign","torusNodePubs","lastPoint","firstPoint","nodeNum","Math","floor","random","initialPoint","headers","pubKeyX","X","pubKeyY","Y","useAPIKey","signedData","Torus","enableOneKey","metadataHost","allowHost","serverTimeOffset","this","ec","EC","metadataCache","memoryCache","metadataLock","privKeyHex","metadataNonce","torusKeyHex","customKeyHex","torusKey","BN","privKey","sub","umod","curve","customKey","newMetadataNonce","generateMetadataParams","setMetadata","indexes","verifierParams","idToken","extraParams","promiseArr","tmpKey","generatePrivate","pubKey","getPublic","tokenCommitment","keccak256","messageprefix","tokencommitment","temppubx","temppuby","verifieridentifier","promiseArrRequest","nodeSigs","encrypted","item","idtoken","nodesignatures","shareResponses","completedRequests","thresholdPublicKey","keys","PublicKey","sharePromises","nodeIndex","sort","b","Index","cmp","Metadata","metadata","ephemPublicKey","Buffer","iv","mac","decrypt","ciphertext","atob","Share","padStart","debug","all","sharesResolved","decryptedShares","curr","allCombis","currentCombi","currentCombiShares","v","includes","shares","indices","derivedPrivateKey","lagrangeInterpolation","decryptedPubKey","decryptedPubKeyX","decryptedPubKeyY","privateKey","getNonce","nonce","getMetadata","pub_key_X","pub_key_Y","add","ethAddress","generateAddressFromPrivKey","options","dataKey","unlock","cachedResult","metadataResponse","put","keyFromPrivate","setData","timestamp","Date","now","sig","sign","getX","getY","set_data","signature","del","secret","upper","lower","mul","neg","temp","delta","invm","publicKey","encode","ethAddressLower","toChecksumAddress","publicKeyX","publicKeyY","keyFromPublic","y","isExtended","isNewKey","assignResult","finalKeyResult","getOrSetNonce","typeOfUser","pubNonce","upgraded","modifiedPubKey","address","generateAddressFromPubKey","getOnly","privKeyBN","nonceBN","enableAll","apiKey","setAPIKey","embedHost","setEmbedHost"],"mappings":"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","file":"torusUtils.cjs.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 19);\n","module.exports = require(\"bn.js\");","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"@babel/runtime/helpers/asyncToGenerator\");","module.exports = require(\"@toruslabs/http-helpers\");","module.exports = require(\"web3-utils\");","module.exports = require(\"@babel/runtime/helpers/classCallCheck\");","module.exports = require(\"json-stable-stringify\");","module.exports = require(\"@babel/runtime/helpers/getPrototypeOf\");","module.exports = require(\"@toruslabs/eccrypto\");","module.exports = require(\"@babel/runtime/helpers/defineProperty\");","module.exports = require(\"@babel/runtime/helpers/inherits\");","module.exports = require(\"@babel/runtime/helpers/possibleConstructorReturn\");","module.exports = require(\"@babel/runtime/helpers/wrapNativeSuper\");","module.exports = require(\"@babel/runtime/helpers/toConsumableArray\");","module.exports = require(\"@babel/runtime/helpers/typeof\");","module.exports = require(\"@babel/runtime/helpers/createClass\");","module.exports = require(\"elliptic\");","module.exports = require(\"memory-cache\");","module.exports = require(\"loglevel\");","import loglevel from 'loglevel'\n\nconst log = loglevel.getLogger('torus.js')\nlog.disableAll()\n\nexport default log\n","function capitalizeFirstLetter(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n}\n\nexport class SomeError extends Error {\n  constructor({ errors, responses, predicate }) {\n    super('Unable to resolve enough promises.')\n    this.errors = errors\n    this.responses = responses\n    this.predicate = predicate\n  }\n}\n\nexport const Some = (promises, predicate) =>\n  new Promise((resolve, reject) => {\n    let finishedCount = 0\n    const sharedState = { resolved: false }\n    const errorArr = new Array(promises.length).fill(undefined)\n    const resultArr = new Array(promises.length).fill(undefined)\n    let predicateError\n    promises.forEach((x, index) => {\n      x.then((resp) => {\n        resultArr[index] = resp\n        return undefined\n      })\n        .catch((error) => {\n          errorArr[index] = error\n        })\n        .finally(() => {\n          if (sharedState.resolved) return\n          predicate(resultArr.slice(0), sharedState)\n            .then((data) => {\n              sharedState.resolved = true\n              resolve(data)\n              return undefined\n            })\n            .catch((error) => {\n              // log only the last predicate error\n              predicateError = error\n            })\n            .finally((_) => {\n              finishedCount += 1\n              if (finishedCount === promises.length) {\n                const errors = Object.values(\n                  resultArr.reduce((acc, z) => {\n                    const { id, error } = z || {}\n                    if (error?.data?.length > 0) {\n                      if (error.data.startsWith('Error occurred while verifying params')) acc[id] = capitalizeFirstLetter(error.data)\n                      else acc[id] = error.data\n                    }\n                    return acc\n                  }, {})\n                )\n\n                if (errors.length > 0) {\n                  // Format-able errors\n                  const msg = errors.length > 1 ? `\\n${errors.map((it) => `• ${it}`).join('\\n')}` : errors[0]\n                  reject(new Error(msg))\n                } else {\n                  reject(\n                    new SomeError({\n                      errors: errorArr,\n                      responses: resultArr,\n                      predicate: predicateError?.message || predicateError,\n                    })\n                  )\n                }\n              }\n            })\n        })\n    })\n  })\n","import JsonStringify from 'json-stable-stringify'\n\nimport { generateJsonRPCObject, post } from './httpHelpers'\nimport log from './loglevel'\nimport { Some } from './some'\n\nexport class GetOrSetNonceError extends Error {}\n\nexport const kCombinations = (s, k) => {\n  let set = s\n  if (typeof set === 'number') {\n    set = Array.from({ length: set }, (_, i) => i)\n  }\n  if (k > set.length || k <= 0) {\n    return []\n  }\n\n  if (k === set.length) {\n    return [set]\n  }\n\n  if (k === 1) {\n    return set.reduce((acc, cur) => [...acc, [cur]], [])\n  }\n\n  const combs = []\n  let tailCombs = []\n\n  for (let i = 0; i <= set.length - k + 1; i += 1) {\n    tailCombs = kCombinations(set.slice(i + 1), k - 1)\n    for (let j = 0; j < tailCombs.length; j += 1) {\n      combs.push([set[i], ...tailCombs[j]])\n    }\n  }\n\n  return combs\n}\n\nexport const thresholdSame = (arr, t) => {\n  const hashMap = {}\n  for (let i = 0; i < arr.length; i += 1) {\n    const str = JsonStringify(arr[i])\n    hashMap[str] = hashMap[str] ? hashMap[str] + 1 : 1\n    if (hashMap[str] === t) {\n      return arr[i]\n    }\n  }\n  return undefined\n}\n\nexport const keyLookup = async (endpoints, verifier, verifierId) => {\n  const lookupPromises = endpoints.map((x) =>\n    post(\n      x,\n      generateJsonRPCObject('VerifierLookupRequest', {\n        verifier,\n        verifier_id: verifierId.toString(),\n      })\n    ).catch((err) => log.error('lookup request failed', err))\n  )\n  return Some(lookupPromises, (lookupResults) => {\n    const lookupShares = lookupResults.filter((x1) => x1)\n    const errorResult = thresholdSame(\n      lookupShares.map((x2) => x2 && x2.error),\n      ~~(endpoints.length / 2) + 1\n    )\n    const keyResult = thresholdSame(\n      lookupShares.map((x3) => x3 && x3.result),\n      ~~(endpoints.length / 2) + 1\n    )\n    if (keyResult || errorResult) {\n      return Promise.resolve({ keyResult, errorResult })\n    }\n    return Promise.reject(new Error(`invalid results ${JSON.stringify(lookupResults)}`))\n  })\n}\n\nexport const waitKeyLookup = (endpoints, verifier, verifierId, timeout) =>\n  new Promise((resolve, reject) => {\n    setTimeout(() => {\n      keyLookup(endpoints, verifier, verifierId).then(resolve).catch(reject)\n    }, timeout)\n  })\n\nexport const keyAssign = async (endpoints, torusNodePubs, lastPoint, firstPoint, verifier, verifierId) => {\n  let nodeNum\n  let initialPoint\n  if (lastPoint === undefined) {\n    nodeNum = Math.floor(Math.random() * endpoints.length)\n    initialPoint = nodeNum\n  } else {\n    nodeNum = lastPoint % endpoints.length\n  }\n  if (nodeNum === firstPoint) throw new Error('Looped through all')\n  if (firstPoint !== undefined) initialPoint = firstPoint\n\n  const data = generateJsonRPCObject('KeyAssign', {\n    verifier,\n    verifier_id: verifierId.toString(),\n  })\n  try {\n    const signedData = await post(\n      'https://signer.tor.us/api/sign',\n      data,\n      {\n        headers: {\n          pubKeyX: torusNodePubs[nodeNum].X,\n          pubKeyY: torusNodePubs[nodeNum].Y,\n        },\n      },\n      { useAPIKey: true }\n    )\n    return post(\n      endpoints[nodeNum],\n      { ...data, ...signedData },\n      {\n        headers: {\n          'Content-Type': 'application/json; charset=utf-8',\n        },\n      }\n    )\n  } catch (error) {\n    log.error(error)\n    return keyAssign(endpoints, torusNodePubs, nodeNum + 1, initialPoint, verifier, verifierId)\n  }\n}\n","import { decrypt, generatePrivate, getPublic } from '@toruslabs/eccrypto'\nimport { get, setAPIKey, setEmbedHost } from '@toruslabs/http-helpers'\nimport BN from 'bn.js'\nimport { ec as EC } from 'elliptic'\nimport stringify from 'json-stable-stringify'\nimport memoryCache from 'memory-cache'\nimport { keccak256, toChecksumAddress } from 'web3-utils'\n\nimport { generateJsonRPCObject, post } from './httpHelpers'\nimport log from './loglevel'\nimport { Some } from './some'\nimport { GetOrSetNonceError, kCombinations, keyAssign, keyLookup, thresholdSame, waitKeyLookup } from './utils'\n\n// Implement threshold logic wrappers around public APIs\n// of Torus nodes to handle malicious node responses\nclass Torus {\n  constructor({\n    enableOneKey = false,\n    metadataHost = 'https://metadata.tor.us',\n    allowHost = 'https://signer.tor.us/api/allow',\n    serverTimeOffset = 0,\n  } = {}) {\n    this.ec = new EC('secp256k1')\n    this.metadataHost = metadataHost\n    this.allowHost = allowHost\n    this.metadataCache = memoryCache\n    this.metadataLock = {}\n    this.enableOneKey = enableOneKey\n    this.serverTimeOffset = serverTimeOffset || 0 // ms\n  }\n\n  static enableLogging(v = true) {\n    if (v) log.enableAll()\n    else log.disableAll()\n  }\n\n  static setAPIKey(apiKey) {\n    setAPIKey(apiKey)\n  }\n\n  static setEmbedHost(embedHost) {\n    setEmbedHost(embedHost)\n  }\n\n  async setCustomKey({ privKeyHex, metadataNonce, torusKeyHex, customKeyHex }) {\n    let torusKey\n    if (torusKeyHex) {\n      torusKey = new BN(torusKeyHex, 16)\n    } else {\n      const privKey = new BN(privKeyHex, 16)\n      torusKey = privKey.sub(metadataNonce).umod(this.ec.curve.n)\n    }\n    const customKey = new BN(customKeyHex, 16)\n    const newMetadataNonce = customKey.sub(torusKey).umod(this.ec.curve.n)\n    const data = this.generateMetadataParams(newMetadataNonce.toString(16), torusKey.toString(16))\n    await this.setMetadata(data)\n  }\n\n  async retrieveShares(endpoints, indexes, verifier, verifierParams, idToken, extraParams = {}) {\n    const promiseArr = []\n    await get(\n      this.allowHost,\n      {\n        headers: {\n          verifier,\n          verifier_id: verifierParams.verifier_id,\n        },\n      },\n      { useAPIKey: true }\n    )\n    /*\n      CommitmentRequestParams struct {\n        MessagePrefix      string `json:\"messageprefix\"`\n        TokenCommitment    string `json:\"tokencommitment\"`\n        TempPubX           string `json:\"temppubx\"`\n        TempPubY           string `json:\"temppuby\"`\n        VerifierIdentifier string `json:\"verifieridentifier\"`\n      } \n      */\n\n    // generate temporary private and public key that is used to secure receive shares\n    const tmpKey = generatePrivate()\n    const pubKey = getPublic(tmpKey).toString('hex')\n    const pubKeyX = pubKey.slice(2, 66)\n    const pubKeyY = pubKey.slice(66)\n    const tokenCommitment = keccak256(idToken)\n\n    // make commitment requests to endpoints\n    for (let i = 0; i < endpoints.length; i += 1) {\n      const p = post(\n        endpoints[i],\n        generateJsonRPCObject('CommitmentRequest', {\n          messageprefix: 'mug00',\n          tokencommitment: tokenCommitment.slice(2),\n          temppubx: pubKeyX,\n          temppuby: pubKeyY,\n          verifieridentifier: verifier,\n        })\n      ).catch((err) => log.error('commitment', err))\n      promiseArr.push(p)\n    }\n    /*\n      ShareRequestParams struct {\n        Item []bijson.RawMessage `json:\"item\"`\n      }\n      ShareRequestItem struct {\n        IDToken            string          `json:\"idtoken\"`\n        NodeSignatures     []NodeSignature `json:\"nodesignatures\"`\n        VerifierIdentifier string          `json:\"verifieridentifier\"`\n      }\n      NodeSignature struct {\n        Signature   string\n        Data        string\n        NodePubKeyX string\n        NodePubKeyY string\n      }\n      CommitmentRequestResult struct {\n        Signature string `json:\"signature\"`\n        Data      string `json:\"data\"`\n        NodePubX  string `json:\"nodepubx\"`\n        NodePubY  string `json:\"nodepuby\"`\n      }\n      */\n    // send share request once k + t number of commitment requests have completed\n    return Some(promiseArr, (resultArr) => {\n      const completedRequests = resultArr.filter((x) => {\n        if (!x || typeof x !== 'object') {\n          return false\n        }\n        if (x.error) {\n          return false\n        }\n        return true\n      })\n      if (completedRequests.length >= ~~(endpoints.length / 4) * 3 + 1) {\n        return Promise.resolve(resultArr)\n      }\n      return Promise.reject(new Error(`invalid ${JSON.stringify(resultArr)}`))\n    }).then((responses) => {\n      const promiseArrRequest = []\n      const nodeSigs = []\n      for (let i = 0; i < responses.length; i += 1) {\n        if (responses[i]) nodeSigs.push(responses[i].result)\n      }\n      for (let i = 0; i < endpoints.length; i += 1) {\n        // eslint-disable-next-line promise/no-nesting\n        const p = post(\n          endpoints[i],\n          generateJsonRPCObject('ShareRequest', {\n            encrypted: 'yes',\n            item: [{ ...verifierParams, idtoken: idToken, nodesignatures: nodeSigs, verifieridentifier: verifier, ...extraParams }],\n          })\n        ).catch((err) => log.error('share req', err))\n        promiseArrRequest.push(p)\n      }\n      return Some(promiseArrRequest, async (shareResponses, sharedState) => {\n        /*\n              ShareRequestResult struct {\n                Keys []KeyAssignment\n              }\n                      / KeyAssignmentPublic -\n              type KeyAssignmentPublic struct {\n                Index     big.Int\n                PublicKey common.Point\n                Threshold int\n                Verifiers map[string][]string // Verifier => VerifierID\n              }\n\n              // KeyAssignment -\n              type KeyAssignment struct {\n                KeyAssignmentPublic\n                Share big.Int // Or Si\n              }\n            */\n        // check if threshold number of nodes have returned the same user public key\n        const completedRequests = shareResponses.filter((x) => x)\n        const thresholdPublicKey = thresholdSame(\n          shareResponses.map((x) => x && x.result && x.result.keys[0].PublicKey),\n          ~~(endpoints.length / 2) + 1\n        )\n        // optimistically run lagrange interpolation once threshold number of shares have been received\n        // this is matched against the user public key to ensure that shares are consistent\n        if (completedRequests.length >= ~~(endpoints.length / 2) + 1 && thresholdPublicKey) {\n          const sharePromises = []\n          const nodeIndex = []\n          for (let i = 0; i < shareResponses.length; i += 1) {\n            if (shareResponses[i] && shareResponses[i].result && shareResponses[i].result.keys && shareResponses[i].result.keys.length > 0) {\n              shareResponses[i].result.keys.sort((a, b) => new BN(a.Index, 16).cmp(new BN(b.Index, 16)))\n              if (shareResponses[i].result.keys[0].Metadata) {\n                const metadata = {\n                  ephemPublicKey: Buffer.from(shareResponses[i].result.keys[0].Metadata.ephemPublicKey, 'hex'),\n                  iv: Buffer.from(shareResponses[i].result.keys[0].Metadata.iv, 'hex'),\n                  mac: Buffer.from(shareResponses[i].result.keys[0].Metadata.mac, 'hex'),\n                  mode: Buffer.from(shareResponses[i].result.keys[0].Metadata.mode, 'hex'),\n                }\n                sharePromises.push(\n                  // eslint-disable-next-line promise/no-nesting\n                  decrypt(tmpKey, {\n                    ...metadata,\n                    ciphertext: Buffer.from(atob(shareResponses[i].result.keys[0].Share).padStart(64, '0'), 'hex'),\n                  }).catch((err) => log.debug('share decryption', err))\n                )\n              } else {\n                sharePromises.push(Promise.resolve(Buffer.from(shareResponses[i].result.keys[0].Share.padStart(64, '0'), 'hex')))\n              }\n            } else {\n              sharePromises.push(Promise.resolve(undefined))\n            }\n            nodeIndex.push(new BN(indexes[i], 16))\n          }\n          const sharesResolved = await Promise.all(sharePromises)\n          if (sharedState.resolved) return undefined\n\n          const decryptedShares = sharesResolved.reduce((acc, curr, index) => {\n            if (curr) acc.push({ index: nodeIndex[index], value: new BN(curr) })\n            return acc\n          }, [])\n          // run lagrange interpolation on all subsets, faster in the optimistic scenario than berlekamp-welch due to early exit\n          const allCombis = kCombinations(decryptedShares.length, ~~(endpoints.length / 2) + 1)\n          let privateKey\n          for (let j = 0; j < allCombis.length; j += 1) {\n            const currentCombi = allCombis[j]\n            const currentCombiShares = decryptedShares.filter((v, index) => currentCombi.includes(index))\n            const shares = currentCombiShares.map((x) => x.value)\n            const indices = currentCombiShares.map((x) => x.index)\n            const derivedPrivateKey = this.lagrangeInterpolation(shares, indices)\n            const decryptedPubKey = getPublic(Buffer.from(derivedPrivateKey.toString(16, 64), 'hex')).toString('hex')\n            const decryptedPubKeyX = decryptedPubKey.slice(2, 66)\n            const decryptedPubKeyY = decryptedPubKey.slice(66)\n            if (\n              new BN(decryptedPubKeyX, 16).cmp(new BN(thresholdPublicKey.X, 16)) === 0 &&\n              new BN(decryptedPubKeyY, 16).cmp(new BN(thresholdPublicKey.Y, 16)) === 0\n            ) {\n              privateKey = derivedPrivateKey\n              break\n            }\n          }\n          if (privateKey === undefined) {\n            throw new Error('could not derive private key')\n          }\n\n          let metadataNonce\n          if (this.enableOneKey) {\n            const { nonce } = await this.getNonce(thresholdPublicKey.X, thresholdPublicKey.Y, privateKey)\n            metadataNonce = new BN(nonce || '0', 16)\n          } else {\n            metadataNonce = await this.getMetadata({ pub_key_X: thresholdPublicKey.X, pub_key_Y: thresholdPublicKey.Y })\n          }\n          log.debug('> torus.js/retrieveShares', { privKey: privateKey.toString(16), metadataNonce: metadataNonce.toString(16) })\n\n          if (sharedState.resolved) return undefined\n          privateKey = privateKey.add(metadataNonce).umod(this.ec.curve.n)\n\n          const ethAddress = this.generateAddressFromPrivKey(privateKey)\n          log.debug('> torus.js/retrieveShares', { ethAddress, privKey: privateKey.toString(16) })\n\n          // return reconstructed private key and ethereum address\n          return {\n            ethAddress,\n            privKey: privateKey.toString('hex', 64),\n            metadataNonce,\n          }\n        }\n        throw new Error('invalid')\n      })\n    })\n  }\n\n  async getMetadata(data, options) {\n    let unlock\n    try {\n      const dataKey = stringify(data)\n      if (this.metadataLock[dataKey] !== null) {\n        await this.metadataLock[dataKey]\n      } else {\n        this.metadataLock[dataKey] = new Promise((resolve) => {\n          unlock = () => {\n            this.metadataLock[dataKey] = null\n            resolve()\n          }\n        })\n      }\n      const cachedResult = this.metadataCache.get(dataKey)\n      if (cachedResult !== null) {\n        if (unlock) unlock()\n        return cachedResult\n      }\n      const metadataResponse = await post(`${this.metadataHost}/get`, data, options, { useAPIKey: true })\n      if (!metadataResponse || !metadataResponse.message) {\n        this.metadataCache.put(dataKey, new BN(0), 60000)\n        if (unlock) unlock()\n        return new BN(0)\n      }\n      this.metadataCache.put(dataKey, new BN(metadataResponse.message, 16), 60000)\n      return new BN(metadataResponse.message, 16) // nonce\n    } catch (error) {\n      log.error('get metadata error', error)\n      if (unlock) unlock()\n      return new BN(0)\n    }\n  }\n\n  generateMetadataParams(message, privateKey) {\n    const key = this.ec.keyFromPrivate(privateKey.toString('hex', 64))\n    const setData = {\n      data: message,\n      timestamp: new BN(~~(this.serverTimeOffset + Date.now() / 1000)).toString(16),\n    }\n    const sig = key.sign(keccak256(stringify(setData)).slice(2))\n    return {\n      pub_key_X: key.getPublic().getX().toString('hex'),\n      pub_key_Y: key.getPublic().getY().toString('hex'),\n      set_data: setData,\n      signature: Buffer.from(sig.r.toString(16, 64) + sig.s.toString(16, 64) + new BN(sig.v).toString(16, 2), 'hex').toString('base64'),\n    }\n  }\n\n  async setMetadata(data, options) {\n    try {\n      this.metadataCache.del(stringify({ pub_key_X: data.pub_key_X, pub_key_Y: data.pub_key_Y }))\n      const metadataResponse = await post(`${this.metadataHost}/set`, data, options, { useAPIKey: true })\n      return metadataResponse.message // IPFS hash\n    } catch (error) {\n      log.error('set metadata error', error)\n      return ''\n    }\n  }\n\n  lagrangeInterpolation(shares, nodeIndex) {\n    if (shares.length !== nodeIndex.length) {\n      return null\n    }\n    let secret = new BN(0)\n    for (let i = 0; i < shares.length; i += 1) {\n      let upper = new BN(1)\n      let lower = new BN(1)\n      for (let j = 0; j < shares.length; j += 1) {\n        if (i !== j) {\n          upper = upper.mul(nodeIndex[j].neg())\n          upper = upper.umod(this.ec.curve.n)\n          let temp = nodeIndex[i].sub(nodeIndex[j])\n          temp = temp.umod(this.ec.curve.n)\n          lower = lower.mul(temp).umod(this.ec.curve.n)\n        }\n      }\n      let delta = upper.mul(lower.invm(this.ec.curve.n)).umod(this.ec.curve.n)\n      delta = delta.mul(shares[i]).umod(this.ec.curve.n)\n      secret = secret.add(delta)\n    }\n    return secret.umod(this.ec.curve.n)\n  }\n\n  generateAddressFromPrivKey(privateKey) {\n    const key = this.ec.keyFromPrivate(privateKey.toString('hex', 64), 'hex')\n    const publicKey = key.getPublic().encode('hex').slice(2)\n    const ethAddressLower = `0x${keccak256(Buffer.from(publicKey, 'hex')).slice(64 - 38)}`\n    return toChecksumAddress(ethAddressLower)\n  }\n\n  generateAddressFromPubKey(publicKeyX, publicKeyY) {\n    const key = this.ec.keyFromPublic({ x: publicKeyX.toString('hex', 64), y: publicKeyY.toString('hex', 64) })\n    const publicKey = key.getPublic().encode('hex').slice(2)\n    const ethAddressLower = `0x${keccak256(Buffer.from(publicKey, 'hex')).slice(64 - 38)}`\n    return toChecksumAddress(ethAddressLower)\n  }\n\n  async getPublicAddress(endpoints, torusNodePubs, { verifier, verifierId }, isExtended = false) {\n    log.debug('> torus.js/getPublicAddress', { endpoints, torusNodePubs, verifier, verifierId, isExtended })\n\n    let finalKeyResult\n    let isNewKey = false\n\n    const { keyResult, errorResult } = (await keyLookup(endpoints, verifier, verifierId)) || {}\n    if (errorResult && JSON.stringify(errorResult).includes('Verifier + VerifierID has not yet been assigned')) {\n      await keyAssign(endpoints, torusNodePubs, undefined, undefined, verifier, verifierId)\n      const assignResult = (await waitKeyLookup(endpoints, verifier, verifierId, 1000)) || {}\n      finalKeyResult = assignResult.keyResult\n      isNewKey = true\n    } else if (keyResult) {\n      finalKeyResult = keyResult\n    } else {\n      throw new Error(`node results do not match at first lookup ${JSON.stringify(keyResult || {})}, ${JSON.stringify(errorResult || {})}`)\n    }\n    log.debug('> torus.js/getPublicAddress', { finalKeyResult, isNewKey })\n\n    if (finalKeyResult) {\n      let { pub_key_X: X, pub_key_Y: Y } = finalKeyResult.keys[0]\n      let typeOfUser\n      let nonce\n      let pubNonce\n      let modifiedPubKey\n      if (this.enableOneKey) {\n        let upgraded\n        try {\n          ;({ typeOfUser, nonce, pubNonce, upgraded } = await this.getOrSetNonce(X, Y, undefined, !isNewKey))\n          nonce = new BN(nonce || '0', 16)\n        } catch {\n          throw new GetOrSetNonceError()\n        }\n        if (typeOfUser === 'v1') {\n          modifiedPubKey = this.ec\n            .keyFromPublic({ x: X.toString(16), y: Y.toString(16) })\n            .getPublic()\n            .add(this.ec.keyFromPrivate(nonce.toString(16)).getPublic())\n        } else if (typeOfUser === 'v2') {\n          if (upgraded) {\n            // OneKey is upgraded to 2/n, returned address is address of Torus key (postbox key), not tKey\n            modifiedPubKey = this.ec.keyFromPublic({ x: X.toString(16), y: Y.toString(16) }).getPublic()\n          } else {\n            modifiedPubKey = this.ec\n              .keyFromPublic({ x: X.toString(16), y: Y.toString(16) })\n              .getPublic()\n              .add(this.ec.keyFromPublic({ x: pubNonce.x, y: pubNonce.y }).getPublic())\n          }\n        } else {\n          throw new Error('getOrSetNonce should always return typeOfUser.')\n        }\n      } else {\n        typeOfUser = 'v1'\n        nonce = await this.getMetadata({ pub_key_X: X, pub_key_Y: Y })\n        modifiedPubKey = this.ec\n          .keyFromPublic({ x: X.toString(16), y: Y.toString(16) })\n          .getPublic()\n          .add(this.ec.keyFromPrivate(nonce.toString(16)).getPublic())\n      }\n\n      X = modifiedPubKey.getX().toString(16)\n      Y = modifiedPubKey.getY().toString(16)\n\n      const address = this.generateAddressFromPubKey(modifiedPubKey.getX(), modifiedPubKey.getY())\n      log.debug('> torus.js/getPublicAddress', { X, Y, address, typeOfUser, nonce: nonce?.toString(16), pubNonce })\n\n      if (!isExtended) return address\n      return {\n        typeOfUser,\n        address,\n        X,\n        Y,\n        metadataNonce: nonce,\n        pubNonce,\n      }\n    }\n    throw new Error(`node results do not match at final lookup ${JSON.stringify(keyResult || {})}, ${JSON.stringify(errorResult || {})}`)\n  }\n\n  /**\n   * Internal functions for OneKey (OpenLogin v2), only call these functions if you know what you're doing\n   */\n\n  static isGetOrSetNonceError(err) {\n    return err instanceof GetOrSetNonceError\n  }\n\n  async getOrSetNonce(X, Y, privKey, getOnly = false) {\n    let data\n    const msg = getOnly ? 'getNonce' : 'getOrSetNonce'\n    if (privKey) {\n      data = this.generateMetadataParams(msg, privKey)\n    } else {\n      data = {\n        pub_key_X: X,\n        pub_key_Y: Y,\n        set_data: { data: msg },\n      }\n    }\n    return post(`${this.metadataHost}/get_or_set_nonce`, data, undefined, { useAPIKey: true })\n  }\n\n  async getNonce(X, Y, privKey) {\n    return this.getOrSetNonce(X, Y, privKey, true)\n  }\n\n  getPostboxKeyFrom1OutOf1(privKey, nonce) {\n    const privKeyBN = new BN(privKey, 16)\n    const nonceBN = new BN(nonce, 16)\n    return privKeyBN.sub(nonceBN).umod(this.ec.curve.n).toString('hex')\n  }\n}\n\nexport default Torus\n","import Torus from './torus'\n\nexport default Torus\n"],"sourceRoot":""}